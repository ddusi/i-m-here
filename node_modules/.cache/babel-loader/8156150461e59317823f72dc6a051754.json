{"ast":null,"code":"/*global kakao*/\n\"use strict\";\n\nvar _jsxFileName = \"/Users/kimminsung/im-here/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [mapdata, setMapdata] = useState(null);\n  const resetRef = useRef(null);\n  useEffect(() => {\n    console.log(\"컴포넌트 마운트\");\n    kakaoMap();\n    console.log(resetRef);\n    onLocation();\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\"); //지도 option 설정\n\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2\n    }; //지도 생성\n\n    resetRef.current = new kakao.maps.Map(maps, options);\n  }; // eslint-disable-next-line\n\n\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n\n    setStatus(\"위치 찾는중...\");\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let LatLon = [lat, lon];\n    setStatus(LatLon);\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude\n    };\n  }; //좌표 위치대로 지도 변경\n\n\n  const displayLoc = (latitude, longitude) => {\n    const locPosition = new kakao.maps.LatLng(latitude, longitude); //마커 이미지\n\n    let imageSrc = `${imhere}`,\n        imageSize = new kakao.maps.Size(70, 90),\n        imageOption = {\n      offset: new kakao.maps.Point(27, 100)\n    };\n    let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n        markerPosition = new kakao.maps.LatLng(latitude, longitude);\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  }; //위치 찾기 버튼\n\n\n  const onLocation = async () => {\n    let {\n      lat,\n      lon\n    } = await getLocation();\n    console.log(lat, lon);\n    displayLoc(lat, lon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uD604\\uC7AC \\uB0B4 \\uC704\\uCE58\\uB294...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maps, {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onLocation,\n      children: \"\\uC704\\uCE58 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Map, \"gGtEr6142FwmheJcCsxwuGri3xI=\");\n\n_c = Map;\nconst Maps = styled.div`\n  width: 400px;\n  height: 400px;\n  border-radius: 25px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n`;\n_c2 = Maps;\nconst Button = styled.button`\n  background: #e3e3e3;\n  position: relative;\n  bottom: 410px;\n  left: 300px;\n  z-index: 1;\n  border: none;\n  border-radius: 1em;\n  padding: 10px 20px 10px 20px;\n  font-weight: bold;\n  box-shadow: 1px 1px 3px #e6e6e6;\n\n  &: hover {\n    background: #dbdbdb;\n  }\n`;\n_c3 = Button;\nexport default Map;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"Maps\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/kimminsung/im-here/src/Map.js"],"names":["React","useEffect","useRef","useState","styled","imhere","Map","latitude","setLatitude","longitude","setLongitude","status","setStatus","mapdata","setMapdata","resetRef","console","log","kakaoMap","onLocation","maps","document","getElementById","options","center","kakao","LatLng","level","current","getLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","lat","coords","lon","LatLon","displayLoc","locPosition","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","marker","Marker","image","setCenter","setMap","Maps","div","Button","button"],"mappings":"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","sourcesContent":["/*global kakao*/\n\n\"use strict\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker.png\";\n\nconst Map = () => {\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [mapdata, setMapdata] = useState(null);\n  const resetRef = useRef(null);\n\n  useEffect(() => {\n    console.log(\"컴포넌트 마운트\");\n    kakaoMap();\n    console.log(resetRef);\n    onLocation();\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\");\n\n    //지도 option 설정\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2,\n    };\n\n    //지도 생성\n    resetRef.current = new kakao.maps.Map(maps, options);\n  };\n\n  // eslint-disable-next-line\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n    setStatus(\"위치 찾는중...\");\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let LatLon = [lat, lon];\n    setStatus(LatLon);\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude,\n    };\n  };\n\n  //좌표 위치대로 지도 변경\n  const displayLoc = (latitude, longitude) => {\n    const locPosition = new kakao.maps.LatLng(latitude, longitude);\n\n    //마커 이미지\n    let imageSrc = `${imhere}`,\n      imageSize = new kakao.maps.Size(70, 90),\n      imageOption = { offset: new kakao.maps.Point(27, 100) };\n\n    let markerImage = new kakao.maps.MarkerImage(\n        imageSrc,\n        imageSize,\n        imageOption\n      ),\n      markerPosition = new kakao.maps.LatLng(latitude, longitude);\n\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage,\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  };\n\n  //위치 찾기 버튼\n  const onLocation = async () => {\n    let { lat, lon } = await getLocation();\n    console.log(lat, lon);\n    displayLoc(lat, lon);\n  };\n\n  return (\n    <>\n      <h3>\n        현재 내 위치는...\n        <br />\n        {status}\n      </h3>\n      <Maps id=\"map\" />\n      <Button onClick={onLocation}>위치 찾기</Button>\n    </>\n  );\n};\n\nconst Maps = styled.div`\n  width: 400px;\n  height: 400px;\n  border-radius: 25px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n`;\n\nconst Button = styled.button`\n  background: #e3e3e3;\n  position: relative;\n  bottom: 410px;\n  left: 300px;\n  z-index: 1;\n  border: none;\n  border-radius: 1em;\n  padding: 10px 20px 10px 20px;\n  font-weight: bold;\n  box-shadow: 1px 1px 3px #e6e6e6;\n\n  &: hover {\n    background: #dbdbdb;\n  }\n`;\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}