{"ast":null,"code":"/*global kakao*/\n\"use strict\";\n\nvar _jsxFileName = \"/Users/kimminsung/im-here/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker1.png\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\nimport \"./assets/Location.css\";\nimport back_icon from \"./assets/hw-icon_back.png\";\nimport refresh_icon from \"./assets/hw-icon_refresh.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [status, setStatus] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [mymap, setMyMap] = useState([]);\n  const resetRef = useRef(null);\n  useEffect(() => {\n    kakaoMap();\n    onLocation();\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\"); //지도 option 설정\n\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2\n    }; //지도 생성\n\n    resetRef.current = new kakao.maps.Map(maps, options);\n  }; // eslint-disable-next-line\n\n\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n    setStatus(\"입니다!\");\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude\n    };\n  }; //좌표 위치대로 지도 변경\n\n\n  const displayLoc = (lat, lon) => {\n    const locPosition = new kakao.maps.LatLng(lat, lon); //마커 이미지\n\n    let imageSrc = `${imhere}`,\n        imageSize = new kakao.maps.Size(70, 90),\n        imageOption = {\n      offset: new kakao.maps.Point(27, 100)\n    };\n    const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n          markerPosition = new kakao.maps.LatLng(lat, lon);\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  }; //위치 찾기 버튼\n\n\n  const onLocation = async () => {\n    let {\n      lat,\n      lon\n    } = await getLocation();\n    displayLoc(lat, lon);\n    const response = await axios.get(`https://api.iam-here.site/location?x=${lon}&y=${lat}`);\n    setMyMap(response.data.data);\n    setIsLoading(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Background, {\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            src: back_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Address, {\n            children: [mymap.roadAddress, \" / \", mymap.w3w]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            src: refresh_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Maps, {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: isloading && /*#__PURE__*/_jsxDEV(Share, {\n          mymap: mymap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Map, \"QIkPcHUz1bTAfYVxikdxHH+eWzk=\");\n\n_c = Map;\nconst Background = styled.div`\n  border-radius: 30px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n  position: absolute;\n  top: 200px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 431px;\n  height: 896px;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n_c2 = Background;\nconst Content = styled.span`\n  display: flex;\n\n  margin: 10px;\n  background: white;\n  border-radius: 35px;\n  width: 410px;\n  height: 50px;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  box-shadow: 3px 3px 15px #00000029;\n`;\n_c3 = Content;\nconst Address = styled.span`\n  align-self: center;\n`;\n_c4 = Address;\nconst Icon = styled.img`\n  align-self: center;\n`;\n_c5 = Icon;\nconst Maps = styled.div`\n  width: 431px;\n  height: 896px;\n  position: absolute;\n  z-index: -1;\n  left: 0px;\n  top: 0;\n  border-radius: 25px;\n`;\n_c6 = Maps;\nconst List = styled.div`\n  background: white;\n  border-radius: 20px 20px 0 0;\n  width: 431px;\n  height: 420px;\n  position: absolute;\n\n  top: 480px;\n  color: black;\n  z-index: 2;\n`;\n_c7 = List;\nexport default Map;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Address\");\n$RefreshReg$(_c5, \"Icon\");\n$RefreshReg$(_c6, \"Maps\");\n$RefreshReg$(_c7, \"List\");","map":{"version":3,"sources":["/Users/kimminsung/im-here/src/Map.js"],"names":["React","useEffect","useRef","useState","styled","imhere","axios","Share","back_icon","refresh_icon","Map","status","setStatus","isloading","setIsLoading","mymap","setMyMap","resetRef","kakaoMap","onLocation","console","log","maps","document","getElementById","options","center","kakao","LatLng","level","current","getLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","lon","coords","longitude","lat","latitude","displayLoc","locPosition","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","marker","Marker","image","setCenter","setMap","response","get","data","roadAddress","w3w","Background","div","Content","span","Address","Icon","img","Maps","List"],"mappings":"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","sourcesContent":["/*global kakao*/\n\n\"use strict\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker1.png\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\nimport \"./assets/Location.css\";\nimport back_icon from \"./assets/hw-icon_back.png\";\nimport refresh_icon from \"./assets/hw-icon_refresh.png\";\nconst Map = () => {\n  const [status, setStatus] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [mymap, setMyMap] = useState([]);\n  const resetRef = useRef(null);\n\n  useEffect(() => {\n    kakaoMap();\n    onLocation();\n\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\");\n\n    //지도 option 설정\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2,\n    };\n\n    //지도 생성\n    resetRef.current = new kakao.maps.Map(maps, options);\n  };\n\n  // eslint-disable-next-line\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n    setStatus(\"입니다!\");\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude,\n    };\n  };\n\n  //좌표 위치대로 지도 변경\n  const displayLoc = (lat, lon) => {\n    const locPosition = new kakao.maps.LatLng(lat, lon);\n\n    //마커 이미지\n    let imageSrc = `${imhere}`,\n      imageSize = new kakao.maps.Size(70, 90),\n      imageOption = { offset: new kakao.maps.Point(27, 100) };\n\n    const markerImage = new kakao.maps.MarkerImage(\n        imageSrc,\n        imageSize,\n        imageOption\n      ),\n      markerPosition = new kakao.maps.LatLng(lat, lon);\n\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage,\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  };\n\n  //위치 찾기 버튼\n  const onLocation = async () => {\n    let { lat, lon } = await getLocation();\n    displayLoc(lat, lon);\n\n    const response = await axios.get(\n      `https://api.iam-here.site/location?x=${lon}&y=${lat}`\n    );\n    setMyMap(response.data.data);\n    setIsLoading(true);\n  };\n\n  return (\n    <>\n      <Background>\n        <Content>\n          <div>\n            <Icon src={back_icon} />\n            <Address>\n              {mymap.roadAddress} / {mymap.w3w}\n            </Address>\n            <Icon src={refresh_icon} />\n          </div>\n        </Content>\n        <Maps id=\"map\" />\n        <List>{isloading && <Share mymap={mymap} />}</List>\n      </Background>\n    </>\n  );\n};\n\nconst Background = styled.div`\n  border-radius: 30px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n  position: absolute;\n  top: 200px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 431px;\n  height: 896px;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n\nconst Content = styled.span`\n  display: flex;\n\n  margin: 10px;\n  background: white;\n  border-radius: 35px;\n  width: 410px;\n  height: 50px;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  box-shadow: 3px 3px 15px #00000029;\n`;\n\nconst Address = styled.span`\n  align-self: center;\n`;\n\nconst Icon = styled.img`\n  align-self: center;\n`;\nconst Maps = styled.div`\n  width: 431px;\n  height: 896px;\n  position: absolute;\n  z-index: -1;\n  left: 0px;\n  top: 0;\n  border-radius: 25px;\n`;\n\nconst List = styled.div`\n  background: white;\n  border-radius: 20px 20px 0 0;\n  width: 431px;\n  height: 420px;\n  position: absolute;\n\n  top: 480px;\n  color: black;\n  z-index: 2;\n`;\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}