{"ast":null,"code":"/*global kakao*/\n\"use strict\";\n\nvar _jsxFileName = \"/Users/kimminsung/im-here/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker1.png\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [mymap, setMyMap] = useState([]);\n  const resetRef = useRef(null);\n  useEffect(() => {\n    kakaoMap();\n    onLocation();\n    console.log(mymap.location.latitude);\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\"); //지도 option 설정\n\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2\n    }; //지도 생성\n\n    resetRef.current = new kakao.maps.Map(maps, options);\n  }; // eslint-disable-next-line\n\n\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n\n    setStatus(\"위치 찾는중...\");\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude\n    };\n  }; //좌표 위치대로 지도 변경\n\n\n  const displayLoc = (latitude, longitude) => {\n    const locPosition = new kakao.maps.LatLng(latitude, longitude); //마커 이미지\n\n    let imageSrc = `${imhere}`,\n        imageSize = new kakao.maps.Size(70, 90),\n        imageOption = {\n      offset: new kakao.maps.Point(27, 100)\n    };\n    let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n        markerPosition = new kakao.maps.LatLng(latitude, longitude);\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  }; //위치 찾기 버튼\n\n\n  const onLocation = async () => {\n    let {\n      lat,\n      lon\n    } = await getLocation();\n    displayLoc(lat, lon);\n    const response = await axios.get(`http://api.iam-here.site/location?x=${lon}&y=${lat}`);\n    setMyMap(response.data.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uD604\\uC7AC \\uB0B4 \\uC704\\uCE58\\uB294...\", mymap.roadAddress, \" \\uC785\\uB2C8\\uB2E4\\uD83C\\uDFC3\\u200D\\u2640\\uFE0F.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Share, {\n      mymap: mymap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maps, {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Map, \"C4rlWfy11m2ZhjXCq1795W048/g=\");\n\n_c = Map;\nconst Maps = styled.div`\n  width: 400px;\n  height: 400px;\n  border-radius: 25px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n`;\n_c2 = Maps;\nconst Button = styled.button`\n  background: #e3e3e3;\n  position: relative;\n  bottom: 410px;\n  left: 300px;\n  z-index: 1;\n  border: none;\n  border-radius: 1em;\n  padding: 10px 20px 10px 20px;\n  font-weight: bold;\n  box-shadow: 1px 1px 3px #e6e6e6;\n\n  &: hover {\n    background: #dbdbdb;\n  }\n`;\nexport default Map;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"Maps\");","map":{"version":3,"sources":["/Users/kimminsung/im-here/src/Map.js"],"names":["React","useEffect","useRef","useState","styled","imhere","axios","Share","Map","latitude","setLatitude","longitude","setLongitude","status","setStatus","mymap","setMyMap","resetRef","kakaoMap","onLocation","console","log","location","maps","document","getElementById","options","center","kakao","LatLng","level","current","getLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","lat","coords","lon","displayLoc","locPosition","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","marker","Marker","image","setCenter","setMap","response","get","data","roadAddress","Maps","div","Button","button"],"mappings":"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","sourcesContent":["/*global kakao*/\n\n\"use strict\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker1.png\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\n\nconst Map = () => {\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [mymap, setMyMap] = useState([]);\n  const resetRef = useRef(null);\n\n  useEffect(() => {\n    kakaoMap();\n    onLocation();\n    console.log(mymap.location.latitude);\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\");\n\n    //지도 option 설정\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2,\n    };\n\n    //지도 생성\n    resetRef.current = new kakao.maps.Map(maps, options);\n  };\n\n  // eslint-disable-next-line\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n    setStatus(\"위치 찾는중...\");\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude,\n    };\n  };\n\n  //좌표 위치대로 지도 변경\n  const displayLoc = (latitude, longitude) => {\n    const locPosition = new kakao.maps.LatLng(latitude, longitude);\n\n    //마커 이미지\n    let imageSrc = `${imhere}`,\n      imageSize = new kakao.maps.Size(70, 90),\n      imageOption = { offset: new kakao.maps.Point(27, 100) };\n\n    let markerImage = new kakao.maps.MarkerImage(\n        imageSrc,\n        imageSize,\n        imageOption\n      ),\n      markerPosition = new kakao.maps.LatLng(latitude, longitude);\n\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage,\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  };\n\n  //위치 찾기 버튼\n  const onLocation = async () => {\n    let { lat, lon } = await getLocation();\n    displayLoc(lat, lon);\n\n    const response = await axios.get(\n      `http://api.iam-here.site/location?x=${lon}&y=${lat}`\n    );\n    setMyMap(response.data.data);\n  };\n\n  return (\n    <>\n      <h3>\n        현재 내 위치는...{mymap.roadAddress} 입니다🏃‍♀️.\n        <br />\n      </h3>\n      <Share mymap={mymap} />\n      <Maps id=\"map\" />\n    </>\n  );\n};\n\nconst Maps = styled.div`\n  width: 400px;\n  height: 400px;\n  border-radius: 25px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n`;\n\nconst Button = styled.button`\n  background: #e3e3e3;\n  position: relative;\n  bottom: 410px;\n  left: 300px;\n  z-index: 1;\n  border: none;\n  border-radius: 1em;\n  padding: 10px 20px 10px 20px;\n  font-weight: bold;\n  box-shadow: 1px 1px 3px #e6e6e6;\n\n  &: hover {\n    background: #dbdbdb;\n  }\n`;\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}