{"ast":null,"code":"/*global kakao*/\n\"use strict\";\n\nvar _jsxFileName = \"/Users/kimminsung/im-here/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker1.png\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\nimport \"./assets/Location.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const [status, setStatus] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [mymap, setMyMap] = useState([]);\n  const resetRef = useRef(null);\n  useEffect(() => {\n    kakaoMap();\n    onLocation();\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\"); //지도 option 설정\n\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2\n    }; //지도 생성\n\n    resetRef.current = new kakao.maps.Map(maps, options);\n  }; // eslint-disable-next-line\n\n\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n    setStatus(\"입니다!\");\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude\n    };\n  }; //좌표 위치대로 지도 변경\n\n\n  const displayLoc = (lat, lon) => {\n    const locPosition = new kakao.maps.LatLng(lat, lon); //마커 이미지\n\n    let imageSrc = `${imhere}`,\n        imageSize = new kakao.maps.Size(70, 90),\n        imageOption = {\n      offset: new kakao.maps.Point(27, 100)\n    };\n    const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n          markerPosition = new kakao.maps.LatLng(lat, lon);\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  }; //위치 찾기 버튼\n\n\n  const onLocation = async () => {\n    let {\n      lat,\n      lon\n    } = await getLocation();\n    displayLoc(lat, lon);\n    const response = await axios.get(`http://api.iam-here.site/location?x=${lon}&y=${lat}`);\n    setMyMap(response.data.data);\n    setIsLoading(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Background, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"1\",\n            width: \"249\",\n            style: {\n              backgroundColor: \"#707070\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD604\\uC7AC \\uB0B4 \\uC704\\uCE58\\uB294...\\uD83C\\uDFC3\\uD83C\\uDFC3\\u200D\\u2640\\uFE0F\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), mymap.roadAddress, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), mymap.w3w, status, \"\\uD83C\\uDFC3\\u200D\\u2640\\uFE0F\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Maps, {\n          id: \"map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), isloading && /*#__PURE__*/_jsxDEV(Share, {\n          mymap: mymap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Map, \"QIkPcHUz1bTAfYVxikdxHH+eWzk=\");\n\n_c = Map;\nconst Background = styled.div`\n  border: 1px solid red;\n  width: 414px;\n  height: 896px;\n  margin: 30px;\n`;\n_c2 = Background;\nconst Container = styled.div`\n  margin-left: 40px;\n  margin-right: 40px;\n  margin-top: 30px;\n`;\n_c3 = Container;\nconst Title = styled.div`\n  margin-bottom: 10px;\n  font-size: 30px;\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  align-items: center;\n  font-family: \"Poppins\", sans-serif;\n`;\n_c4 = Title;\nconst Maps = styled.div`\n  width: 300px;\n  height: 450px;\n  border-radius: 25px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n  margin-top: 30px;\n`;\n_c5 = Maps;\nexport default Map;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Maps\");","map":{"version":3,"sources":["/Users/kimminsung/im-here/src/Map.js"],"names":["React","useEffect","useRef","useState","styled","imhere","axios","Share","Map","status","setStatus","isloading","setIsLoading","mymap","setMyMap","resetRef","kakaoMap","onLocation","console","log","maps","document","getElementById","options","center","kakao","LatLng","level","current","getLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","lon","coords","longitude","lat","latitude","displayLoc","locPosition","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","marker","Marker","image","setCenter","setMap","response","get","data","backgroundColor","roadAddress","w3w","Background","div","Container","Title","Maps"],"mappings":"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","sourcesContent":["/*global kakao*/\n\n\"use strict\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport imhere from \"./assets/marker1.png\";\nimport axios from \"axios\";\nimport Share from \"./Share\";\nimport \"./assets/Location.css\";\n\nconst Map = () => {\n  const [status, setStatus] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [mymap, setMyMap] = useState([]);\n  const resetRef = useRef(null);\n\n  useEffect(() => {\n    kakaoMap();\n    onLocation();\n\n    return () => {\n      console.log(\"컴포넌트가 사라짐.\");\n    };\n  }, []);\n\n  const kakaoMap = () => {\n    //지도를 담은 maps\n    let maps = document.getElementById(\"map\");\n\n    //지도 option 설정\n    let options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 2,\n    };\n\n    //지도 생성\n    resetRef.current = new kakao.maps.Map(maps, options);\n  };\n\n  // eslint-disable-next-line\n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"현재 브라우저에서 위치 정보가 지원되지 않습니다.\");\n      return;\n    }\n    const position = await new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n    setStatus(\"입니다!\");\n    return {\n      lon: position.coords.longitude,\n      lat: position.coords.latitude,\n    };\n  };\n\n  //좌표 위치대로 지도 변경\n  const displayLoc = (lat, lon) => {\n    const locPosition = new kakao.maps.LatLng(lat, lon);\n\n    //마커 이미지\n    let imageSrc = `${imhere}`,\n      imageSize = new kakao.maps.Size(70, 90),\n      imageOption = { offset: new kakao.maps.Point(27, 100) };\n\n    const markerImage = new kakao.maps.MarkerImage(\n        imageSrc,\n        imageSize,\n        imageOption\n      ),\n      markerPosition = new kakao.maps.LatLng(lat, lon);\n\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n      image: markerImage,\n    });\n    resetRef.current.setCenter(locPosition);\n    marker.setMap(resetRef.current);\n  };\n\n  //위치 찾기 버튼\n  const onLocation = async () => {\n    let { lat, lon } = await getLocation();\n    displayLoc(lat, lon);\n\n    const response = await axios.get(\n      `http://api.iam-here.site/location?x=${lon}&y=${lat}`\n    );\n    setMyMap(response.data.data);\n    setIsLoading(true);\n  };\n\n  return (\n    <>\n      <Background>\n        <Container>\n          <Title>\n            <h5>here</h5>\n            <svg\n              height=\"1\"\n              width=\"249\"\n              style={{ backgroundColor: \"#707070\" }}\n            ></svg>\n          </Title>\n          <h3>\n            현재 내 위치는...🏃🏃‍♀️\n            <br />\n            {mymap.roadAddress} <br />\n            {mymap.w3w}\n            {status}🏃‍♀️\n            <br />\n          </h3>\n\n          <Maps id=\"map\" />\n          {isloading && <Share mymap={mymap} />}\n        </Container>\n      </Background>\n    </>\n  );\n};\n\nconst Background = styled.div`\n  border: 1px solid red;\n  width: 414px;\n  height: 896px;\n  margin: 30px;\n`;\n\nconst Container = styled.div`\n  margin-left: 40px;\n  margin-right: 40px;\n  margin-top: 30px;\n`;\n\nconst Title = styled.div`\n  margin-bottom: 10px;\n  font-size: 30px;\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  align-items: center;\n  font-family: \"Poppins\", sans-serif;\n`;\n\nconst Maps = styled.div`\n  width: 300px;\n  height: 450px;\n  border-radius: 25px;\n  box-shadow: 3px 3px 15px #e6e6e6;\n  margin-top: 30px;\n`;\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}